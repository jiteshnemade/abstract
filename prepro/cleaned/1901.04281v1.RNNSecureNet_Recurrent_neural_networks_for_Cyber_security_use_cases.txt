introduction  in today s data world  malware is the common threat to everyone from big  organizations to common people and we need to safeguard our systems  computer  networks  and valuable data. cyber crimes have risen to the peak and many hacks   data stealing  and many more cyber attacks. hackers gain access through any  loopholes and steal all valuable data  passwords and other useful information.  mainly in android platform malicious attacks increased due to increase in large  number of application. in other hand its very easy for persons to develop multiple  malicious malwares and feed it into android market very easily using a third party     software s. attacks can be through any means like e mails  exe files  software  etc.  criminals make use of security vulnerabilities and exploit their opponents. this  forces the importance of an effective system to handle the fraudulent activities. but  today s sophisticated attacking algorithms avoid being detected by the security  mechanisms. every day the attackers develop new exploitation techniques and  escape from anti virus and malware software s. thus nowadays security solution  companies are moving towards deep learning and machine learning techniques  where the algorithm learns the underlying information from the large collection of  security data itself and makes predictions on new data. this  in turn  motivates the  hackers to develop new methods to escape from the detection mechanisms.  malware attack remains one of the major security threats in cyberspace. it is an  unwanted program which makes the system behave differently than it is supposed  to behave. the solutions provided by antivirus software against this malware can  only be used as a primary weapon of resistance because they fail to detect the new  and upcoming malware created using polymorphic  metamorphic  domain flux and  ip flux. the machine learning algorithms were employed which solves complex  security threats in more than three decades    . these methods have the capability  to detect new malwares. research is going at a high phase for security problems  like intrusion detection systems  ids   malware detection  information leakage   etc. fortunately  today s deep learning  dl  approaches have performed well in  various long standing ai challenges     such as natural language processing   nlp   computer vision  speech recognition. recently  the application of deep  learning techniques have been applied for various use cases of cyber security                                                                                         . it has the  ability to detect the cyber attacks by learning the complex underlying structure   hidden sequential relationships and hierarchical feature representations from a  huge set of security data. in this paper  we are evaluating the efficiency of svm  and rnn machine learning algorithms for cyber security problems. cyber security  provides a set of actions to safeguard computer networks  systems  and data.  this paper is arranged accordingly where related work are discussed in section    the background knowledge of recurrent neural network  rnn  in section  . in  section   proposed methodologies including description  data set are discussed and  at last results are furnished in section  . section   is concluding with conclusion.      . related works  in this section related work for cyber security use cases is discussed  android  malware classification  task     incident detection  task     and fraud detection   task   . the most commonly used approach for malware detection in android  devices is the static and dynamic approach     . in the static approach  all the  android permissions are collected by unpacking the application and whereas  in  dynamic approach  the run time execution attributes like system calls  network  connections  power consumption  user interactions and efficient utilization of  memory. most of the commercial systems used today use both the static and  dynamic approach. for low computational cost  resource utilization  time resource  static analysis is mainly preferred for android devices. meanwhile dynamic  analysis has the advantage to detect metamorphic and polymorphic malware.       have evaluated the performance of traditional ml algorithms for malware  detection on android devices without using the api calls and permission as  features. maldozer proposed the use of api calls with deep learning approach to  detect the android malware and classify them accordingly     .      api calls  contains schematic information which helps in understand the intention of the app  indirectly without any user interface. using embedding techniques at training  phase api calls are extracted using dex assembly      which helps in effective  malware detection on neural networks.  the security issues in cloud computing are briefly discussed in     .      proposed  ml based anomaly detection that acts on the network  service and work flow  layers. a hybrid of both machine learning and rule based systems are combined for  intrusion detection in the cloud infrastructure     .      shows how incident  detection can perform well than intrusion detection. in      discusses a detailed  study on   different traditional ml classifiers in finding the credit card frauds   financial frauds. credit card frauds are detected using convolution neural  networks. fraud detection in crowd sourcing projects is discussed in      .statistical fraud detection method model is trained to discriminate the  fraudulent and non fraudulent using supervised and unsupervised methods in credit  card frauds.     especially in communication networks fraud detection are  rectified using supervised learning by statistical learning of behavior of networks  us using bayesian network approach. data mining approaches related to financial  fraud detection are discussed in     .      mainly discusses the fraud detection in     today s new online e commerce transaction using recurrent neural  network rnn  which performed very well. based on this a detailed survey is  conducted in     . the risks and trust involved in e commerce market are detailed  studied in     .   . experiments   . . description of data sets  the first task  task   is an android classification task. the dataset is created from  a set of apk packages files collected from the opera mobile store from jan to sep       is used. this dataset consists of api  application programming interface   information for        apk files where        files for training and        files  for testing     . the second task  task   is incident detection. this dataset contains  operational log file that was captured from unified threat management  utm  of  unitecloud. task   is fraud detection. this dataset is anonymised data that was  unified using the highly correlated rule based uniformly distributed synthetic data   hcrud  approach by considering similar distribution of features. detailed  description of task   and task   is given in tables   and   respectively.    samples              features        classes        training             testing            table   description of task   data set    apk files  features                  classes        training             testing            table   description of task   data set   .  hyper parameter selection  in order to identify suitable parameter for recurrent network  we used a  moderately sized architecture with one hidden layer consisting of                     and     units.   trails of the experiment are run for each parameter related to  units and each experiment is run till     epochs.     units have shown highest   fold cross validation accuracy for all use cases of cyber security. hence we     decided to use     units for the rest of the experiments. to find an optimal result   three trails of experiment with     epochs have run with learning rate varying in  the range   .    .  . the highest    fold cross validation accuracy was obtained  by using the learning rate of  .  . there was a sudden decrease in accuracy at  learning rate  .   and finally attained highest accuracy at learning rates of  .       .    and  .   in comparison to learning rate  .  . this accuracy may have been  enhanced by running the experiments till      epochs. as more complex  architectures we have experimented with  showed less performance within      epochs  so  .   as learning rate for the rest of the experiments by taking training  time and computational cost into account.   .  network topologies  the rnn   to   layer network topology are used in order to find an optimum  network structure for our input data since we don t know the optimal number of  layers and neurons. we run   trails of experiments for each rnn network toplogy.  each trail of the experiment was run till     epochs. it was observed that most of  the deep learning architectures learn the normal category patterns of input data  within     epochs itself. the number of epochs required to learn the malicious  category data usually varies. this complex architecture networks required a large  number of iterations in order to reach the best accuracy. at last  we obtained the  best performed network topology for each use case. for task   and task      layer  rnn network performed well. for task one  the   layer rnn network gave a  good performance in comparison to the   layer rnn. then we decided to use    layer rnn network for the rest of the experiments.    fold cross validation  accuracy of each rnn network topology for all use cases is shown in table  .  rnn network  topology  rnn   layer  rnn   layer  rnn   layer  rnn   layer  rnn   layer  rnn   layer  rnn   layer  rnn   layer    task name    accuracy    task    task    task    task    task    task    task    task       .      .      .      .      .      .      .      .        rnn   layer  task    rnn   layer  task    rnn   layer  task    rnn   layer  task    rnn   layer  task    rnn   layer  task    rnn   layer  task    rnn   layer  task    rnn   layer  task    rnn   layer  task    table   summary of test results     .      .      .      .      .      .      .      .      .      .        . . proposed architecture  an intuitive overview of our proposed rnn architecture for all use cases is shown  in fig  . this consists of the input layer with six hidden layers and an output layer.  an input layer contains      neurons for task one    neurons for task two and     neurons for task three. an output layer contains   neurons for task one     neurons for task two and   neurons for task three. the detailed structure and  configuration of proposed rnn architecture are shown in table  . the neurons in  input to hidden layer and hidden to output layer are fully connected. the proposed  recurrent network is composed of recurrent layers  fully connected layers  batch  normalization layers and dropout layers.  recurrent layers  it contains the recurrent units neurons. the units have selfconnection loops. this helps to carry out the previous time step information for the  future time step.  batch normalization and regularization  to obviate overfitting and speed up  the rnn model training  dropout   .         and batch normalization     was  used in between fully connected layers. a dropout removes neurons with their  connections randomly. in our alternative architectures for task    the recurrent  networks could easily overfit the training data without regularization even when  trained on large number samples.  classification  for classification  the final fully connected layer follows sigmoid  activation function for task one and task two  softmax for task three. the fully  connected layer absorb the non linear kernel and sigmoid layer output zero      benign  and output one  malicious   softmax provides the probability score for  each class.  the prediction loss for task   and task   is estimated using binary cross entropy  lo s s   p d   e d            n      e d i lo g p d i        e d i   lo g      p d i      n i       where p d is a vector of predicted probability for all samples in testing data set   is a vector of expected class label  values are either   or  .    ed    the prediction loss for task   is estimated using categorical cross entropy  lo s s   p d   e d         x p d   x   lo g   e d   x       where p d is true probability distribution  e d is predicted probability distribution.  we have used s g d as an optimizer to minimize the loss of binary cross entropy and  categorical cross entropy.    fig   proposed architecture   . results  we have evaluated the proposed rnn model against classical machine learning  classifier svm  on   different cyber security use cases. .identifying android  malware based on api information   .incident detection over unified threat  management  utm  operation on unite cloud   .fraud detection in financial  transactions. the detailed results of proposed rnn model on   different use cases  are displayed in table  .  algorithm  svm  svm    task name  android malware  classification  incident detection    accurac precision recall  y   .      .      .      .        .        .       fscore   .      .        svm  rnn    layer  rnn    layer  rnn    layer    fraud detection  android malware  classification  incident detection     .      .        .      .        .      .        .      .        .        .        .        .       fraud detection     .        .        .        .       table   summary of test results   . conclusion  in this paper performance of rnn and other classical machine learning classifiers  are evaluated for cyber security use cases such as android malware classification   incident detection  and fraud detection. in all the three use cases  rnn  outperformed all the classical machine learning classifiers. moreover  the same  architecture for all three use cases is able to perform better than the other classical  machine learning classifiers. the reported results of rnns can be further improved  by training with few more layers and neurons to the existing architectures.  