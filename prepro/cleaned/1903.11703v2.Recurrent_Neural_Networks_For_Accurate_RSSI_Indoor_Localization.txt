introduction    the motivation of this paper is to locate a walking human  using the wifi signals of the carried smartphone. in general   there are two main groups in wifi indoor localization  model  based and fingerprinting based methods. to estimate the location of the target  the former one utilizes the propagation  model of wireless signals in forms of the received signal  strength  rss   the time of flight  tof  and or angle of arrival   aoa          . in contrast  the latter considers the physically  measurable properties of wifi as fingerprints or signatures for  each discrete spatial point to discriminate between locations.  due to the wide fluctuation of wifi signals     in an indoor  environment  the exact propagation model is difficult to obtain   which makes the fingerprinting approach more favorable.  in fingerprint methods  the received signal strength indicator   rssi  is widely used as a feature in localization because  rssi can be obtained easily from most wifi receivers such as  mobile phones  tablets  laptops  etc.         . however  rssi  has two drawbacks  instability due to fading and multipath  effects and device heterogeneity due to the fact that different  this work was supported in part by the natural sciences and engineering  research council of canada under grant         fortinet research under  contract       and nvidia under gpu grant program  corresponding authors  x. dong and t. lu. .  m. t. hoang  b.yuen  x. dong and t. lu are with the department of  electrical and computer engineering  university of victoria  victoria  bc   canada  email   xdong  taolu  ece.uvic.ca .  r. westendorp and k. reddy are with fortinet canada inc.  burnaby  bc   canada.    devices have different rssis even at the same position    .  in order to mitigate these problems  channel state information   csi  is adopted to provide richer information from multiple  antennas and multiple subcarriers         . although csi is a  more detailed fingerprint to improve the localization accuracy   it is only available with the specific wireless network interface  cards  nic   e.g.  intel wifi link      mimo nic  atheros  ar     or atheros ar     chipset    . therefore  rssi is  still a popular choice in practical scenarios.  among wifi rssi fingerprinting indoor localization approaches  the probabilistic method is based on statistical inference between the target signal measurement and stored  fingerprints using bayes rule    . the rssi probability density  function  pdf  is assumed to have empirical parametric distributions  e.g.  gaussian  double peak gaussian  lognormal        which may not be necessarily accurate in practical situations.  in order to achieve better performance  non parametric methods           did not make no assumption on the rssi pdf  but require a large amount of data at each reference point  rp   to form the smooth and accurate pdf. beside the probabilistic  approach  the deterministic methods use a similarity metric  to differentiate the measured signal and the fingerprint data  in the dataset to locate the user s position     . the simplest  deterministic approach is the k nearest neighbors  knn              model which determines the user location by calculating  and ranking the fingerprint distance measured at the unknown  point and the reference locations in the database. moreover   support vector machine  svm       provides a direct mapping  from rssi values collected at the mobile devices to the  estimated locations through nonlinear regression by supervised  classification technique     . despite their low complexity  the  accuracy of these methods are unstable due to the wide fluctuation of wifi rssi          . in contrast to these algorithms   artificial neural network  ann            estimates location  nonlinearly from the input by a chosen activation function  and adjustable weightings. in indoor environments  because  the transformation between the rssi values and the user s  locations is nonlinear  it is difficult to formulate a closed form  solution     . ann is a suitable and reliable solution for its  ability to approximate high dimension and highly nonlinear  models    . recently  several ann localization solutions   such as multilayer perceptron  mlp        robust extreme  learning machine  relm        multi layer neural network   mlnn        convolutional neural network  cnn        etc.   have been proposed.  although having been extensively investigated in the literature  all of the above algorithms still face challenges such as  spatial ambiguity  rssi instability and rssi short collecting  time per location     . to address these challenges  this paper          focuses on recurrent neural network  rnn  to determine the  user s location by exploiting the sequential correlation of rssi  measurements. since the moving speed of the user in an  indoor environment is bounded  the temporal information can  be used to distinguish the locations that has similar fingerprints. note that resolving the ambiguous locations has been  a common challenge in indoor localization. some works in  literature also exploit the measurements in previous time steps  to locate the current location  including the use of kalman  filter           and soft range limited k nearest neighbors   srl knn      . among them  kalman filter estimates the  most likely current location based on prior measurements   assuming a gaussian noise of the rssi and linear motion  of the detecting object. however  in real scenarios  these  assumptions are not necessarily valid     . in comparison   srl knn does not make the above assumptions but requires  that the speed of the targeting object is bounded  e.g.  from   .  m s to   m s. if the speed of the target is beyond the  limit  the localization accuracy of srl knn will be severely  impaired. in contrast  our rnn model is trained from a large  number of randomly generated trajectories representing the  natural random walking behaviours of humans. therefore  it  does not have the assumptions or constraints mentioned above.  the main contributions of this paper are summarized as  follows.    according to our knowledge  there is no existing comprehensive rnn solution for wifi rssi fingerprinting  with detailed analysis and comparisons. therefore  we  propose a complete study of rnn architectures including network structures and parameter analysis of several  types of rnns  such as vanilla rnn  long short term  memory  lstm        gated recurrent unit  gru         bidirectional rnn  birnn   bidirectional lstm  bilstm       and bidirectional gru  bigru      .    the proposed models are tested in two different datasets  including an in house measurement dataset and the  published dataset ujiindoorloc     . the accuracy is  compared not only with the other neural network methods  i.e.  mlp      and mlnn       but also some  popular conventional methods  i.e.  radar       srlknn       kernel method     and kalman filter     .    three challenges of wifi indoor localization  i.e.  spatial  ambiguity  rssi instability and rssi short collecting  time per location are discussed and addressed. furthermore  the other important factors  including the network  training time requirement  users speed variation  different testing time slots and historical prediction errors  are  discussed and analyzed.  ii.    r elated w orks    the first research on neural network for indoor localization  was reported by battiti et al.           . in their work  a multilayer perceptron network with   layers consisting one input  layer  one hidden layer with    neurons and one output layer  was implemented to nonlinearly map the output  coordinate   from the input  rssi . using     rps for training and     random points for validation  the accuracy of this model is     a      b     fig.  .  a  floor map of the test site. the solid red line is the mobile user s  walking trajectory with red arrows pointing toward walking direction.  b  heat  map of the rssi strength from   aps used in our localization scheme.     .    .   m  which is comparable with that of simple knn  algorithm. in order to achieve better performance  multi layer  feed forward neural network with   hidden layers was investigated     . mlnn is designed with   sections  rssi transformation section  rssi denoising section and localization section  with the boosting method to tune the network parameters for  misclassification correction. other refinements of mlp are proposed in discriminant adaptive neural network  dann         which inserts discriminative components  dcs  layer to extract  useful information from the inputs. the experiment shows that  dann improves the probability of the localization error below   .  m by     over the conventional knn radar     . as all  of the above methods are time consuming in the training phase   robust extreme learning machine      is proposed to increase  the training speed of the feedforward neuron networks. relm  consists of a generalized single hidden layer with random  hidden nodes initialization and kernelized formulations with  second order cone programming. the experiment illustrates  that the training speed of relm is more than     times faster  than the conventional machine learning methods      and the  localization accuracy is increased by    .  although the feedforward neural networks are simple and  easy to implement  they cannot extract the useful information          table i.    c omparisons of i ndoor l ocalization e xperiments u sing m achine l earning t echniques    method  mlp       dann       relm       mlnn       confi      geomagnetic rnn         feature  rssi  rssi  rssi  rssi  csi  magnetic information    access point  ap                        efficiently from the noisy wifi signal  leading to a limited  accuracy. therefore  more complicated neural networks  e.g.   cnn and rnn  were adopted for indoor wifi localization.  confi     proposed a three layers cnn to extract the information from wifi channel state information. csi from different  subcarriers at different time is arranged into a matrix  which  is similar to an image. confi is trained using the csi feature  images collected at a number of rps. the localization result  is the weighted centroid of rps with high output values. the  experiment illustrates that confi outperforms conventional  knn radar      by   .   in terms of mean localization  error. however  as mentioned above  csi is only accessible for  some specific wireless network interface cards. consequently   such algorithms cannot be generically implemented. recently   rnn is used for indoor localization. ref.      proposed a  simple rnn with   time step and   hidden layers. in their  work  rnn classifies    rps based on the rssi readings  from     aps. the classification accuracy is   .   . a more  efficient rnn is published in     . in that work  the rnn  model uses     neurons  mean squared error  mse  loss  function  and    time step traces as the input for the network.  geomagnetic data is used as fingerprints instead of the wireless  data. a million traces of various pedestrian walking patterns  are generated with     of them being used for training and     for validation. the achieved localization errors range from   .    to  .    m with the average error being  .    m. in  addition to the geomagnetic data  light intensity is also utilized  in the deep lstm network      to estimate the indoor location  of the target mobile device. their   layer lstm exploits  temporal information from bimodal fingerprints  i.e.  magnetic  field and light intensity data  through recursively mapping the  input sequence to the label of output locations. the accuracy  is reported as     of the test locations with location errors  around   m and the maximum error being around  .  m.  table i summarizes the experimental set up and the results  from the above mentioned neural network methods. here the  number of access points  aps   rps and testing points vary  between those experiments and the grid size is defined as the  distance between two consecutive rps.  in general  these methods provide acceptable accuracy from    m to   m but none of them have sufficiently investigated  the three problems of using rssi as fingerprints. therefore   we propose several rnn solutions  such as vanilla rnn   lstm  gru  birnn  bilstm and bigru  to solve the three  rssi fingerprinting challenges. our localization results are  compared not only with the other neural network methods  i.e.   mlp      and mlnn       but also some conventional methods  i.e.  radar       srl knn       kernel method      and kalman filter     .    reference point  rp                               testing point                         of rps    iii.    grid size   .  m   m   .  m   .  m   .      m   .   m    accuracy   .     .  m   .     .  m   .     .  m   .     .  m   .     .  m   .  m    rnn m ethods    a. recurrent neural network overview  a recurrent neural network is a class of artificial neural  network  where the output results depend not only on the  current input value but also on the historical data     . rnn  is often used in situations  where data has a sequential correlation. in the case of indoor localization  the current location  of the user is correlated to its previous locations as the user  can only move along a continuous trajectory. therefore  rnn  exploits the sequential rssi measurements and the trajectory  information to enhance the accuracy of the localization. several rnn models have been proposed. the vanilla rnn        the simplest rnn model  has limited applications due to  vanishing gradient during the training phase     . to mitigate  this effect  long short term memory      creates an internal  memory state which adds the forget gate to control the time  dependence and effects of the previous inputs. gru      is  similar to lstm but only consists of the update and reset  gate instead of the forget  update and output gate in lstm.  birnn       bilstm      and bigru      are the extensions  of the traditional rnn  lstm and gru respectively  which  not only utilize all available input information from the past but  also from the future of a specific time frame. in the following  section we will describe the details about the proposed wifi  rssi indoor localization system using rnn models.  b. proposed localization system  the development of our localization rnn models is divided  into two phases  a training phase  offline phase  and a testing  phase  online phase . in the training phase  rssi readings at  each predefined rp are collected into a database. assuming  that the area of interest has p aps and m rps  we consider  each rp i at its physical location li  xi   yi   having a corresponding fingerprint vector fi    f i   f i   ...  fni    where n  is the number of available features  rssis  from all aps at  all carrier frequencies and fji      j   n   is the j th feature  at rp i. during the training phase  a number of scans are  collected at a single rp while in the testing phase fewer scans  of rssis readings is collected as the user is mobile in practical  scenario. fig.   a  illustrates the localization map with   aps       rps and     testing locations  while fig.   b  shows the  heat map of these   aps. the architecture of the proposed  rnn system is presented in fig.   a . details of the process  are described as follows.     data filter  during the training phase  rssis at rps  are collected by a mobile device mounted on an autonomous  driving robot and stored in a database. as expected  the rssi  measurements often experience substantial fluctuations due to          location index physical euclidean  distance    location index    probabilistic value          .           .         .         .         .                .         .         .                        .         .         .                  probabilistic map    euclidean distance dataset    cdf value    location index   .         .         .         .         .         .         .         .         .             cdf map     b                   time step    time step    time step           time step t       a   fig.  .     c      a  localization process of the proposed rnn system.  b  trajectory generation process.  c  sliding window averaging in online testing phase.    dynamically changing environments such as human blocking  and movements  interference from other equipment and devices  receiver antenna orientation  etc.      . for example  the  mobile device was placed at p        as shown in fig.   a .  the experiment was conducted during working hours when  many students used wifi and walked around the lab. the  standard deviation of maximum rssi over     consecutive  rssi readings was  .  db  and    of the measurements     readings  could not be detected. in those cases  the mobile  device missed the beacon frame packets sent by the router.  in order to filter out those outliers  we adopt the iterative  recursive weighted average filter      with   taps and    different weighted factors  i.e.        .         .         .          .          .  . this weighted filter has the form of  a low pass filter as shown in fig.  . in both the training and  testing phase  the filter is used in the same way with fixed  taps and weighted factors. the effectiveness of the filter will  be studied in section v.     trajectory generation  the rssis at the output of the  data filter will be used to generate random training trajecto     ries under the constraints that the distance between consecutive locations is bounded by the maximum distance a user  can travel within the sample interval in practical scenarios.  fig.   b  illustrates the trajectory generation process. firstly   the physical euclidean distance between each location and  the rest of the database is calculated to form a euclidean  distance dataset. secondly  based on that  the probabilistic map  will be generated to represent the probability of a location   p  li    that will become the next location of the user in the  trajectory. since the moving speed of an indoor user is limited   the locations which are near to the previous locations should  have higher probability to become the next location in the  trajectory than the further locations. the user location will  be updated in every consecutive sampling time interval  t.  therefore  the maximum distance which the user can move  in  t is     vmax    t  where the maximum speed vmax is  chosen to be larger than the human indoor normal speed  from   .  m s to   m s            . the normalized probability p  li            model    mimo  multiple rssi input  multiple locations output    model    miso  multiple rssi input  single location output   a           c   rnn    rnn    rnn            time step      time step      rnn    rnn    time step t    time step      time step      model    a miso  multiple rssi with actual locations input  single  location output   b     time step      time step t    time step      model    a mimo  multiple rssi with actual locations input   multiple locations output          d   rnn    rnn    rnn    rnn    rnn            time step      time step      time step t      time step      time step      time step            e     model    p mimo  multiple rssi with predicted locations input   multiple locations output    rnn    rnn    rnn    rnn       time step      fig.  .    time step t      time step      time step      time step      time step t      proposed rnn models.    the furthest location in the interested area. eq.     has the form  of a gaussian distribution with the mean being the previous  location and the standard deviation being  . all of the locations  having the same physical distance with li will get the same  probability to be chosen as the next point on the trajectory.  from the probabilistic map  a cumulative distribution function   cdf  map is built by summing the p  li   for each location li .  finally  in order to get the next location lj of a any location li  in the trajectory  a random number r      r      is picked.  lj is the location which has the value in the cdf map being  closest with r.  fig.  .    weighted average filter transfer function.    is calculated as follows.   xi   xpre       yi   ypre                           e       where  xpre   ypre   is the most recent location of li   dmax is  the maximum distance between the considered location li and  p  li             d   max          exp         proposed rnn models  the proposed rnn architecture  is trained by the data from consecutive locations in a trajectory  to exploit the time correlation between them. each location in  a trajectory appears at a different time step. the length of a  trajectory  or equivalently the number of time steps  defines  the memory length t as illustrated in fig.  . the number of  time steps t significantly impacts the performance of rnn  because all of the weights and hidden states will be saved at  every time step during a training trajectory     . a larger t          value will incorporate more information from the past but will  accumulate more localization errors. the optimal t value will  be chosen by the experiment in section v.  fig.   illustrates   different proposed rnn models labeled  from model   to model  . model   has a multiple input single  output  miso  structure where several rssi readings  fi    from the previous time steps are fed into the network to get the  single location at time step t  lt  . model    similar to model     has a multiple input single output  a miso  structure.  however  model   takes in actual previous step locations as  well as rssis unlike model  . the actual locations are the  ground truth locations l .  by comparison  model   to model   are multiple input multiple output  mimo  structures where several rssi readings  from multiple time steps are fed to the network to get multiple  output locations l. model   has a mimo structure  where  multiple rssi inputs fi produce multiple output locations li .  in contrast  model   takes in multiple rssis with multiple  actual locations for the input and produces multiple locations  for the output  denoted as a mimo.  model   takes in multiple rssis and multiple previous predicted locations for the input and produces multiple locations  for the output  denoted as p mimo. specifically  in model     a mimo  the location used in the training is the ground truth  from the dataset. in model    p mimo  the location value is the  predicted location  li   from the previous time step. note that in  the testing phase  both model   and model   use the predicted  locations from the previous time steps as input because ground  truth is not available.  the objective of rnn training is to minimize the loss  function l l  l   defined as the euclidean distance between  the output l and the target l  using the backpropagation algorithm     . in single output models such as miso and amiso  the loss function is given by  l l  l       lt   l t     .           in contrast  the multiple output models mimo  a mimo and  p mimo adopt a loss function expressed by  pt    li   l i      .       l l  l     i    t     sliding window averaging  mimo  a mimo and pmimo have the output locations appearing in every time step   subsection iii b  . in the online testing phase  the output  location lt will appear in several time steps as shown in  fig.   c . lij is the output location li of time step j. at the  output time step t      we have a set of output location   lt    lt    ...  ltt      from t     previous steps. in each output  time step  the accuracy of the targeted output result lt can  be slightly different due to the difference in length of previous  historical information. for example  in fig.   c   at output time  step    lt  is estimated with the information of t     previous  steps. however  at output time step    the number of previous  steps for lt  decrease to t      and at time step t      ltt    is  predicted with no previous step. therefore  the sliding window  averaging can average the error of the predicted location lt in  multiple output steps and increase the localization accuracy.    the final output result lt will be the average of the above  output set   pt    j  j   lt  lt    .       t     iv. database a nd e xperiments  all experiments have been carried out on the third floor of  engineering office wing  eow   university of victoria  bc   canada. the dimension of the area is    m by    m. it has  three long corridors as shown in fig.   a . there are   aps  and   of them provide   distinct mac address for  .  ghz  and   ghz communications channels respectively  except for  one that only operates on  .  ghz frequency. equivalently   in every scan     rssi readings from those   aps can be  collected.  the rssi data for both training and testing will be collected  using an autonomous driving robot. the   wheel robot as  shown in fig.   a  has multiple sensors including a wheel  odometer  an inertial measurement unit  imu   a lidar  sonar  sensors and a color and depth  rgb d  camera. it can navigate  to a target location within an accuracy of  .    .   m. the  robot also carries a mobile device  google nexus   running  android  .   to collect wifi fingerprints. the dataset for  offline training was collected by the phone carrying robot at      rps. at each location      scans of rssi measurements   s         were collected. to build the dataset  at each  location in the training trajectory  we randomly choose one out  of     stored rssis as the rssi associated with the location.  there are total         random generated training trajectories  following the proposed method in subsection iii b . this  approximates well the user s random walk property and helps  to reduce the spatial ambiguity. the initial position of the user  in the whole testing trajectory is known.  in the online phase  the robot moved along a pre defined  route  fig.   a   with an average speed around  .  m s. the  robot will collect rssi at     testing locations along the  trajectory. at each location  only   or   rssi scans  s      or     will be collected and transmitted to a server in real time. the  server will predict the user s position according to the proposed  algorithms and the prediction accuracy will be calculated.  v. r esults a nd d iscussions  the initial setup for the proposed rnn system follows the  parameters presented in table ii. all of the results below are  presented after    fold tests with a total of         random  training trajectories.  a. filter comparison  fig.   a  compares the cdf of localization errors among  the proposed rnn models  i.e.  miso lstm and p mimo  lstm  with and without weighted average filter  subsection iii b   in both offline training and online testing phases. in  p mimo  the filter decreases the maximum error from  .  m to   .   m. in addition      of the error is within  .   m with the  filter while without filter the value increases to  .  m. in miso   the filter also leads to better performance with     of the error          table ii.    i nitial setup parameters for rnn system    category  k fold tests  rnn type  memory length  t    model  loss function  hidden layer  hl   number of neurons for each hl  dropout  optimizer  learning rate  number of training trajectory for   fold test  number of training epochs      t  dmax    value      lstm      p mimo  rmse           .   adam   .                    m   s   m    fig.  . average number of ambiguous trajectories with different number of  locations in a training trajectory     a     of those methods has approximately     improvement with  filter. because of the apparent improvements  we adopt the  filter to all the models proposed in this paper.     b      c      d     fig.  . the cdf of the localization error of  a  filter and no filter cases  b     different rnn models  c  different memory lengths in rnn structure  d   rnn  lstm  gru  birnn  bilstm and bigru with p mimo model.    being within  .   m compared with   m without filter. in amiso  mimo and a mimo  the weighted average filter also  provides consistently good results. the localization accuracy    b. model comparison  table iii illustrates the average errors of all proposed models  in subsection iii b . among them  p mimo achieves the best  performance with an accuracy of  .    .   m. mimo is the  second best performer with the average error of  .    .   m.  miso has the worst accuracy with the error of  .    .   m.  fig.   a  compares the cdf errors among these five models.  mimo and p mimo consistently show the dominating accuracy with     of the errors within  .  m  compared with  .  m  of miso. furthermore  the maximum error of p mimo is   .   m which is lower than the   m obtained from miso. in the  rest of the paper  p mimo is chosen for further performance  study.  c. hyper parameter analysis  this subsection provides a detailed study of choosing the  optimal hyper parameters for the proposed model p mimo.  although the   proposed models  i.e.  miso  a miso  mimo   a mimo  p mimo  have different input and output  their  general neural network structures are mostly similar. therefore  the procedure to select the optimal hyper parameters of  p mimo will also be valid for the other proposed models  including miso  a miso  mimo and a mimo.     memory length t   fig.   c  shows the results of pmimo with different memory lengths  subsection iii b    i.e.   a training trajectory has       or    locations. the performance  of all three cases is comparable. the    time steps training  trajectory has a slightly better accuracy with the maximum  error being only  .  m  compared with  .  m and  .   m in  the case of    time steps and   time steps respectively.  the theoretical explanation is as follows. a location lj is  defined as an ambiguous point of li if their physical distance  is larger than the grid size but their two vectors fi and fj  have high pearson correlation coefficient above the correlation threshold. besides  two locations are defined as physical  neighbours if the physical distance between them is less than          table iii.  method  average error  m   method  average error  m     miso lstm   .      .    radar        .      .      average localization errors    a miso lstm   .      .    mlnn        .      .      mimo lstm   .      .    mlp        .      .      a mimo lstm   .      .    kernel method       .      .      p mimo lstm   .      .    kalman filter        .      .     or equal to the grid size. the correlation threshold is chosen  based on the average correlation coefficients between li and  all of its physical nearest neighbours  i.e.  approximately  .  in  our database. then all non nearest neighbour locations whose  correlation coefficient above this threshold are considered as  ambiguous points. pearson correlation coefficient   fi   fj    between fi and fj can be calculated as follows    fi   fj        n    x fni    i fnj    j            n     n     i   j           where  i    j are the mean of fi and fj respectively   i    j  are the standard deviation of fi and fj respectively. similar  to the definition of the ambiguous location    trajectories are  defined as ambiguous if they include different locations but  the combinations of their fingerprints have a high pearson  correlation coefficient. fig.   demonstrates the advantage of  the proposed lstm model which exploits the sequential trajectory locations compared with the conventional single point  prediction. in the case of single point prediction    location  in a training trajectory   the average number of ambiguous  locations in our database are   . if we increase the number of  locations in a trajectory for training  the number of ambiguous  trajectories decreases significantly. if a training trajectory has  more than   locations  there will be no ambiguity in our  database. therefore  the memory length configured as     locations is reasonable to remove all the ambiguity.     number of hidden layers and neurons  fig.   a  illustrates the average localization errors of p mimo with different  number of hidden layers and neurons per layer. in general   adopting   hidden layers leads to better accuracy than   hidden  layer. in the   hidden layer model  using     neurons results  the best accuracy of  .    .   m. increasing more neurons  does not result in better performance. in comparison  the best  accuracy of   hidden layers model is  .    .   m when the  number of neurons per layer is    . in summary    hidden  layers and     neurons per layer are the optimal parameters  for our proposed model.     number of training trajectories and training epochs   the learning curve can determine the minimum required  number of training trajectory samples and training epochs for  the proposed rnn models. fig.   b  shows the relationship  between the training and validation errors vs. the number of  training trajectory samples of the proposed p mimo model.  according to fig.   b   overfitting will be mitigated if the  number of training samples increases to     . therefore       is the minimum number for the random training trajectories to  feed to p mimo in the training phase. fig.   c  illustrates the  relationship between the training and cross validation errors vs.  the number of running epochs of p mimo lstm when the  training trajectory samples is     . when the cross validation  error is at a minimum on the graph  the minimum number of     a      b      c   fig.  .  a  average localization errors of p mimo lstm with different  number of hidden layers and neurons per layer.  b  learning curve of pmimo lstm with the average localization error vs. the number of training  trajectory samples.  c  learning curve of p mimo lstm with the average  localization error  the training trajectory samples         vs. the number of  running epochs.    epochs is approximately      .     learning rate  optimization algorithm and dropout  rate  table iv shows the localization errors when the learning  rates and optimization algorithms are varied. clearly  optimizer  adam with the learning rate  .    provides the best results  with the average error of  .    .   m. table v demonstrates  the accuracy of different dropout rates. with the dropout rate  equals or less than  .   the performance of p mimo is mostly  unchanged  i.e.   .    .   m at a dropout rate of  .  and          table iv.    d ifferent learning rates and optimization  algorithms    optimization algorithm  adam  adam  adam  sgd  sgd  sgd  rmsprop  rmsprop  rmsprop    table v.    learning rate   .     .      .       .     .      .       .     .      .        average error  m    .     .     .      .     .      .     .      .     .      .     .      .     .      .     .      .     .      .      d ifferent dropout rates    dropout rate   .    .    .    .     average error  m    .      .     .      .     .      .     .      .      fig.  . average localization errors with the error bars of p mimo lstm  and srl knn in changing speed scenarios    potential long distance dependencies. furthermore  gru is a  simpler version of lstm  which means that some of the  feature of lstm are reduced in gru  e.g.  the exposure of the  memory content control     . therefore  lstm has a slightly  better performance than gru. for the bidirectional models  including birnn  bilstm  bigru  they use both historical  and future information  i.e.  the initial location and the last  location to predict the current location. in this paper  we  assume only the very first location of each trajectory is known.  as the ground truth of the last location is not incorporated   error is introduced into the bidirectional models. therefore   the bidirectional models are not favorable in our work.  fig.  . the cdf of the localization error of p mimo lstm and the other  methods in literature.    e. literature comparison   .    .   m at a dropout rate of  . . after the dropout rate  increases to above  .   the accuracy is deteriorated and reaches  the bottom of  .    .   m at a dropout rate of  . .  d. rnns comparison  fig.   d  compares the performance between vanilla  rnn       lstm       gru       birnn  bilstm       and bigru     . all of the settings follow table ii. although the gap between these systems are close  lstm  still consistently has the best performance with the average  error at  .    .   m compared to  .    .   m of rnn    .    .   m of gru   .    .   m of birnn   .    .   m  of bilstm and  .    .   m of bigru  respectively. while      of the errors of rnn and bilstm are all within   .  m  the ones of lstm and gru are within  .  m. some  explanations are as follows.  regarding vanilla rnn  there is a disadvantage of vanishing  gradient at large t     . therefore  rnn has difficulty to  learn from the long term dependency  i.e  t      in our  case. unlike the traditional rnn  both lstm and gru are  able to decide whether to keep the existing memory from the  past by their gates  i.e  forget gate in lstm and reset gate  in gru. intuitively  their performances in our experiment are  both better than vanilla rnn because if lstm and gru detect  an important feature from an input sequence at early stage  they  easily carry this information over a long distance and capture    fig.   compares the proposed p mimo lstm with the  feedforward neural network mlp       multi layer neural  network  mlnn       and the other conventional methods  including knn radar       probabilistic kernel method      and kalman filter     . in our experiments  we reproduced  the results of mlp and mlnn           . the mlp model  has three layers with only one     neuron hidden layer. in  contrast  mlnn has five layers  i.e.    input layer    hidden  layers with          and     neurons respectively and   output  layer. the input of these memoryless methods is a single rssi  vector     rssi readings  of a specific location  the output is  a single location. the input of p mimo is a trajectory with t  rssi vectors     t rssi readings  from t time steps  the  output is a trajectory including t output locations. p mimo  clearly outperforms mlp with the maximum error of  .  m  compared with  .  m of mlp.     of lstm model errors are  within  .  m  which is much lower than  .  m of mlp. the  maximum errors of conventional methods such as radar   kalman filter and kernel method are more significant  .  m    .  m and  .   m  respectively. besides      of the errors  of those methods are all within   m   .  times higher than  the proposed lstm model. table iii lists the average errors  between lstm models and the other mentioned methods.  clearly  the accuracy of p mimo with  .   m dominates the  other conventional feedforward neural networks with  .   m  of mlnn      and  .   m of mlp     .           f. further discussion     three challenges of wifi indoor localization  as mentioned at the beginning  the proposed lstm models can  address three challenges of wifi indoor localization. subsection v c  has demonstrated that lstm adopts sequential  measurements from several locations in the trajectory and  decreases the spatial ambiguity significantly. in addition  rssi  instability and rssi short collecting time per location create  the diverse values of rssi readings in one location  which can  lead to more locations having similar fingerprint distances. the  proposed lstm models can effectively remove the number of  false locations which are far from the previous points based  on the series of the previous measurements and predictions.  therefore  the adverse effects of the second and third challenge  can be mitigated.     training time requirement  compared with other conventional methods  e.g.  knn radar       probabilistic kernel method     and kalman filter       the proposed rnn  method outperforms. however  those conventional methods do  not require the training phase  which compares the current  rssi measurement with the ones in the database to get user  locations directly. in contrast  the proposed rnn methods  require to train the neural network model beforehand. the  learning curve can determine the minimum required training  time for the proposed rnn models. from subsection v c    the optimal training trajectory samples is     and the optimal  number of epochs is approximately       according to a   fold  test. in the experiment  the training is executed on a home built  computer with an amd fx tm       eight core cpu and an  nvidia gtx      gpu. the running time is approximately    s per epoch. therefore  the training time is approximately                s         hour and   minutes .  in practical scenarios  more aps are used  more rssi features can be extracted and better performance can be achieved.  however  increasing the number of aps also creates more computational cost and extends the training time. ref.      suggests  to use lstm with projection layer  lstmp  to reduce the  computational cost. furthermore  lstmp was reported helpful  to error rate reduction because parameter reduction helps the  lstm generalization. in the future work  when the number  of aps are increased to achieve better accuracy  the idea of  lstmp can be applied to reduce the training time of our rnn  models.     impacts from speed variation  some conventional shortmemory methods such as kalman filter       srl knn       have the constraints on the speed of the users. if a user  changes moving speed rapidly  the localization accuracy of  these methods will be degraded severely. in contrast  the  proposed lstm network is trained with random trajectories  as described in subsection iii b  without strict constraints on  the speed of the users. fig.   illustrates the average errors  of the proposed p mimo lstm and srl knn using rssi  mean database with parameter       m     . the number  of testing points are     locations following the backward  and forward trajectory like fig.  . the maximum speed is  the instant speed of the robot between   random consecutive  testing locations in a sampling time interval  t. the number    fig.   . average correlation coefficient between different time trajectory  tests and the database.    of locations having the maximum speed are     of the total  testing points      locations . the rest of the locations have  a random speed smaller than the maximum speed. when the  maximum speed increases from  .  m s to  .  m s  the average  errors of lstm model stays stable around  .    .   m. on  the other hand  srl knn starts from the comparable result as  p mimo lstm with  .   m in the case of  .  m s. after the  maximum speed increases to above  .  m s  the accumulated  errors appear and the accuracy of srl knn is significantly  degraded to above   m with a large variation more than   m.     impacts from different time slots  the proposed rnn  methods first learn the rssi range characteristics of the  environment offline in a prior training phase before using the  learned characteristics during the testing phase. therefore  the  initial data in the training phase might not have the same  distribution with the data in the testing phase     . in our  experiment  we address this problem with the support of  our autonomous robot as shown in fig.   a . the robot is  programmed to repeatedly navigate around the experimental  area and collect the new data to update the database in different  hours and days. the proposed rnn networks are trained with  a wide variety of data reflecting the different characteristics of  the environment at different time periods. fig.    illustrates  the pearson correlation coefficients between different time  trajectory tests and the appropriate neighbour locations in our  database. we repeatedly collect the testing trajectory with      locations as shown in fig.   a  at    random hours. the  correlation coefficients range from  .  to  .   which proves that  we can always find similarly distributed data in the database  corresponding to each single test.  furthermore  according to the survey       the percentage  of stationary time when a user is not moving can exceed      for most mobile users. some of the locations falling in the  stationary period can serve as the anchor points to re calibrate  the network in the testing phase     . on the other hand  if  other sensors such as camera are available  the additional data  can help to increase the estimation accuracy of locations in the  trajectory     . a detailed study of these issues is out of the  scope of this paper but will be addressed in our future work.     stability and robustness  since p mimo lstm leverages the information of a user s previous positions to estimate  the current location  the stability of p mimo lstm depends  on the accuracy of historical data from the previous steps. in           table vi.  building    m   building    m   all buildings  m     average l ocalization e rrors o f ujii ndoor l oc database  p mimo   .      .      .       lstm   .    .    .     radar        .     .    .     .    .     .     mlnn        .     .    .     .    .     .     fig.   .  fig.   . cdf of p mimo lstm localization errors in different historical  data error scenarios.    order to investigate the propagation error due to the imperfect  prior location estimation  fig.    illustrates the localization  errors of p mimo lstm with both the ideal and erroneous  history data. starting with the perfect historical coordinate  h x  y  for every location in the testing trajectory as illustrated  in section iv  an amount of gaussian error is added to  h. the erroneous prior location h   x    y     is obtained as   x    x   xe   y     y   ye   where xe and ye are random  variables that follow gaussian distribution  q  xe   n      x e     ye   n      y e      e    x e    y e  fig.    shows that if the standard deviation error  e of the  historical data is within   m  the localization accuracy is mostly  similar to the ideal case  with a maximum error of  .  m and      of the error is  .  m. when  e increases to   m and   m   the accuracy becomes slightly worse with the maximum errors  being around   m and     errors being around  .   m and   .  m  respectively. as shown in table iii  the average errors  of p mimo lstm is within   m  i.e.   .      .   m  which  indicates that our proposed p mimo lstm is robust to the  localization error of the previous positions.  g. other database comparison  the consistent effectiveness of the proposed lstm system  is proved by the published dataset  ujiindoorloc     . the  reported average localization error      is  .  m. the database  from   random phone users  phone id          in   different  buildings  building id    and    are used to implement pmimo lstm. note that the grid size of ujiindoorloc is  different from the collected database which affects the average  localization error. however  the relative accuracy comparison  between the proposed lstm and conventional knn  e.g.   radar      and kalman filter      or feedforward neural  network  e.g  mlp      and mlnn      can verify the    kalman filter        .     .    .     .    .     .     mlp        .     .    .     .    .     .     localization error cdf of ujindoorloc database for all buildings    effectiveness of our algorithm. table vi shows the average  errors in meter of p mimo lstm  radar  kalman filter   mlp and mlnn for each separate building and for all    buildings in general. for all   buildings  the average error of pmimo lstm is  .   .  m  significantly lower than the result  of radar  .   .  m  mlnn  .   .  m  kalman filter   .   .  m and mlp  .   .  m. furthermore  fig.    compares the cdf of localization errors between those methods.  in total  a   .  m maximum localization error is recorded for  p mimo lstm     m for mlnn and the largest maximum  localization error of    m for radar. besides      of the  error is below   m in the case of p mimo lstm  which  is much lower than    m in the case of mlp  mlnn and  radar.  vi. c onclusions  in conclusion  we have proposed recurrent neural networks  for wifi fingerprinting indoor localization. our rnn solution  has considered the relation between a series of the rssi  measurements and determines the user s moving path as one  problem. experimental results have consistently demonstrated  that our lstm structure achieves an average localization error  of  .   m with     of the errors under   m  which outperforms  feedforward neural network  conventional methods such as  knn  kalman filter and probabilistic methods. furthermore   main challenges of those conventional methods including  the spatial ambiguity  rssi instability and the rssi short  collecting time have been effectively mitigated. in addition   the analysis of vanilla rnn  lstm  gru  birnn  bilstm  and bigru with important parameters such as loss function   memory length  input and output features have been discussed  in detail.  