introduction  autonomous vehicles are equipped with many advanced  sensors that allow them to perceive other vehicles  obstacles   and pedestrians in the environment. substantial work has  been done in the areas of perception and reasoning for  autonomous vehicles and other forms of robots to allow  these agents to make decisions based on their percepts          . however  the majority of this past work make the tacit  assumption that the sensors are working reliably. hence  in  these systems  the ability to make autonomous decisions is  lost under sensor failure. in practice  such an assumption  is risky and not always a guarantee  especially in the case  of autonomous vehicles deployed in the real world amongst  other human driven vehicles. in the event of sensor failure in  autonomous vehicles  only past sensor readings are available  for decision making. these vehicles then need to be able to  plan and execute emergency maneuvers while safely avoiding  other moving obstacles on the road.    robotics institute  university of michigan  ann arbor   sajanptl  griffb  jjcorso  umich.edu    electrical engineering and computer science  university of michigan   ann arbor  griffb  jjcorso  umich.edu    toyota motor north america research and development  ann arbor  kris.kusano toyota.com    fig.  . the toyota autonomous vehicle used for data set collection and  experimentation. the sensor suite contains a multi lidar system along  with gps and inertial sensors. a stereo camera is also included and used  for visualizations  but it is not used in the data set for this work.    to optimally execute emergency maneuvers requires the  knowledge of what other vehicles surrounding the blinded  agent are going to do in the near future  including predicting  semantic maneuvers and exovehicle  trajectories. in this  work  we specifically address the first issue of predicting  the maneuvers of other vehicles up to three seconds into  the future  such as performing left or right lane change  maneuvers or staying in the same lane  while driving on the  highway. since future exovehicle trajectories are dependent  on these semantic behaviors  tackling the behavior prediction  problem becomes a necessary prerequisite that can simplify  the trajectory prediction problem. we approach this problem  using as little as one second and up to five seconds of  past observations of neighboring vehicles based on lidar   gps  inertial  and high definition map data collected from  an autonomous toyota vehicle  see fig.   .  there are two distinct categories of modeling choices for  this problem of predicting semantic categories of exovehicle  behavior  a classical probabilistic graphical modeling      approach and a contemporary deep neural network           approach. both approaches are able to integrate various  measurements into a common representation and to model  their temporal evolution.  the classical approach of probabilistic graphical models      such as factor graphs  spatiotemporal graphs  and  dynamic bayesian networks      which bring graphical models into the sequential modeling space  is widely used in    throughout the paper  we use the term exovehicles to refer to the  vehicles in the vicinity of our autonomous vehicle  which we refer to as  the egovehicle.     the robotics community for many reasons  including their  interpretability and the high level structures  which can  capture various relationships between features to modeling  temporal sequences. however  they require a parameterization of factor models that is structured by hand using domainspecific knowledge and optimized using various methods   including structural support vector machines and expectation  maximization      which  arguably  struggle to incorporate  large scale data well.  on the other hand  recent advancements in temporal sequence modeling have come from the use of recurrent neural  networks  rnns            which can be trained end to end  for various tasks. while methods that rely on deep learning  lack the interpretability of factor graphs  these networks learn  richer models than those currently employed in factor graphs.  indeed  rnn based methods have been applied to predicting  future vehicle maneuvers but only in the context of making  predictions for a single observed human driver           .  in this work  we want both the interpretability of factor  graphs and the scalability of deep rnns. to that end  we  bring rnn based methods to the problem of predicting the  future maneuvers of exovehicles within the vicinity of our  own autonomous vehicle while traveling on a highway. we  propose a composite rnn that leverages the recent work  in structural rnns  srnns      . here  rnn units are  connected in the form of factor graphs. these networks  employ the interpretable  high level spatiotemporal structure  of graphical models while using rnn units specifically to  learn rich  nonlinear factor and node functions for factor  graphs. as with single rnn based networks  srnns are  trained end to end and can be unrolled over each step in the  temporal sequence at inference time to make the predictions  for the given task. following the methodology of srnns  we  propose a novel lane based graphical model which we then  convert into a srnn so we can learn rich factor models for  lane change prediction.  our composite lane srnn captures the spatiotemporal  interactions between a given vehicle and its neighbors in the  same and adjacent lanes. to model lane wise interactions  the  graph includes a factor for the right  left  and same lanes that  combines pose  velocity  and map based lane information for  the neighboring vehicles within the given lane. the model is  unrolled over each time step of the sequence of past sensor  observations to predict the future lane change maneuver  class.  we provide an analysis on the efficacy of our lanebased srnn in predicting the future behavior of all tracked  highway vehicles in alternative lanes  not just forward and  backward in the same lane  in the event of sensor malfunction for varying future and past time horizons. we train  and evaluate our models using natural multi lane interstate  highway driving data obtained from an autonomous vehicle  driving amongst other human drivers. this data set is not  augmented with simulated driving scenarios as in galceran  et al.           and is more extensive than other highway  datasets used in jain et al.           . thus  the performance  of our models on this data set constitutes the performance    of our models on the actual autonomous robot for authentic  highway driving.  ii. r elated w orks  a. maneuver anticipation  recent work in predicting driver maneuvers has primarily  focused on the intent of the target vehicle s human driver   intent is based on tracking the driver s face with an inwardfacing camera along with features outside of and in front  of the vehicle using a camera  velocity sensor  and gps                 . the works of jain et al.                   use various rnn based architectures while jain et al.        uses graphical models      both of which are essential to this  work. however  rather than anticipating the behavior of our  own vehicle  we address the problem of predicting the lane  change maneuvers of neighboring vehicles in an interstate  highway environment. moreover  by utilizing a multi lidar  system that provides all around coverage  we predict future  maneuvers for multiple vehicles in the surrounding neighborhood rather than only those detected and tracked in front  of the data collection  ego  vehicle.  the method in galceran et al.           involves anticipating the maneuvers of other vehicles and takes a reinforcement learning approach to simulate multiple possible  future maneuvers. while it chooses the ones that are most  likely to occur  however  this approach is based on simulated  approximations of limited highway driving scenarios. conversely  our method is trained and evaluated on data collected  from natural freeway driving  which keeps our validation  unaffected by simulation based modeling errors.  b. graphical models and structural rnns  graphical models are used in jain et al.           in  the form of autoregressive input output hidden markov  models  hmms  to model the temporal sequences that lead  up to various maneuvers. similarly  hmms are used in  schlechtriemen et. al             using a similar neighborhood context for the target vehicle  however  this method  relies on hand tuned features computed from the tracked  poses and map information of all of the vehicles rather than  learning the factor models without restrictive assumptions  on what features to extract. the work presented in jain et  al.            bridges the gap between probabilistic graphical  models and deep learning by introducing the structural rnn   which exhibits better performance over graphical model  counterparts through evaluations in many problem spaces  including maneuver anticipation for the target vehicle s human  driver using facial tracking. while our method follows the  same methodology of transforming a graph into a structural  rnn  we propose a novel graph that takes into account  lane based spatiotemporal interactions between vehicles in  the neighborhood of the target vehicle to predict future lane  change maneuvers. we also evaluate the performance solely  on natural freeway driving rather than city driving.     iii. p roblem s et u p and data    direction of travel    given a recent history of sensor readings varying from  one to five seconds  our goal is to predict the lane changing  behavior of exovehicles at prediction horizons varying from       .  seconds to      .  seconds. our prediction space is  either left lane change  right lane change  or no lane change.  we collect a data set of highway driving using a toyota sedan  retrofitted with the sensors of a typical automated vehicle.  in this paper  we will refer to this vehicle as the egovehicle   shown in figure  . the sensor suite includes   ibeo lux  l  lidars mounted on all sides of the ego vehicle as well as an  applanix pos lv  version    high accuracy gps with realtime kinetic  rtk  corrections. using the ibeo lux fusion  system       we detect the relative position and orientation of  neighboring vehicles up to approximately     meters away.  using high definition maps that include lane level information  e.g. lane widths  markings  curvature  gps coordinates  etc.  along with gps measurements and the relative  detections of neighboring vehicles  we localize the ego  vehicle and its neighbors on the map. the gps coordinates  of the ego vehicle are projected into a world fixed frame  using the mercator projection       and the relative poses of  other vehicles are also mapped into this frame to determine  absolute poses. similarly  the velocities and yaw rates of  all vehicles are determined. along with vehicle poses  the  maps allow us to determine the lane in which the ego  and neighboring vehicles are traveling in. over    hours of  this data are collected at   .  hz on multi lane highways  in southeast michigan and southern california  giving us  roughly   million samples for behavior prediction.  given these off the shelf methods for detecting other vehicles and localizing them to the map  we focus on developing  a framework that uses pose  velocity  and lane information to  predict future lane changes. specifically  we represent the ith  vehicle at each time step t with the following state vector   i    i    vti    px it   py it    ti   p x t   p y t     ti   nl   nr  t             where px and py are the absolute world fixed frame positions in meters and p x and p y are their velocities    is the  heading angle of the vehicle in radians with    as the yaw  rate in radians second  nl is the number of lanes to the left  of the vehicle  and nr is the number of lanes to the right of  the vehicle  both in the direction of travel . we represent the  sequence of historical states over time for each vehicle as  vti    vtih   . . .   vti              where th is the maximum number of historical time steps  included. for each vehicle at each time step  there are three  possible lane change maneuvers that can occur tf     time  steps into the future   left lane change  right lane change   and no lane change. we denote this set of possible maneuvers as m    lef t  right  no . these are determined by  examining the change in lane identifiers provided in the map  between times tf     and tf    . we represent these labels    we use   steps to represent  .  seconds. since the data frequency is    .  hz  we round all fractional steps up to the nearest integer.    left lane    v     v     same lane    v     vq    v     right lane    v     v     fig.  . an example six car  three lane  context of neighboring vehicles  surrounding the target exovehicle. we chose a six car neighborhood since it  is the minimal context required for representing the lane based interactions  between the observed vehicles. all of these neighboring vehicles are not  present at each time step in natural freeway driving  thus  indicator variables  are included as a part of the augmented vehicle states used as inputs to our  model.    as one hot vectors ytif in     and annotate each vehicle state  vti in     with its future lane change label vector.  iv. l ane c hange p rediction m odel  in this section  we discuss our proposed composite lane  srnn model  which allows us to transparently model that  problem using factor graphs and  at the same time  compose  the factors together into an rnn based model. for a given  exovehicle v q traveling on a multi lane highway  we model  the future lane change probability as a function of the  vehicle s previous states as well as the previous states of  its neighboring vehicles. we use a six vehicle neighborhood   shown in fig.    that contains the vehicles ahead and behind  the target vehicle in the left and right lanes and the vehicles  directly ahead and behind the target vehicle in the same lane.  according to this convention  for every target vehicle v q   the  neighbors ahead and behind it in the left lane are v   and v      the neighbors ahead and behind it in the same lane are v    and v     and the neighbors ahead and behind it in the right  lane are v   and v   .  since v q may be at the right  or left most lane or other  vehicles may be out of sensor range during natural freeway  driving  it is not guaranteed that each of these neighboring positions is actually occupied by a vehicle. for this  reason  we only include a neighborhood of six vehicles   which provides a minimalist representation of the target  vehicle s context. accordingly  we augment the state of each  neighboring vehicle v j from each time step th to t with an  indicator variable of   for when it is present in the target  vehicle s neighborhood and   for when it is not. we use  these augmented neighbor vehicle states as well as the target  vehicle s state as the inputs to our lane change prediction  model.  a. graphical models for lane based maneuver prediction  given the three lane structure of the target vehicle s neighborhood  we design a factor graph that represents the probability of the future lane change label of the target vehicle  using edges that represent the interaction between vehicles     in each lane  left  same  right  with the target vehicle. we  make the assumption that given the observed state of the  target vehicle at a given time step  the states of vehicles  in a given lane are conditionally independent of vehicles  in other lanes at that time step. hence  we model factors  for vehicles in the left  right  and same lanes separately.  furthermore  we assume that the target vehicle behavior is  conditioned on the states of the vehicles within the threelane context. the random variables are the target vehicle  behavior labels y and the future vehicle states  however   only the future behavior label is of interest. we start with  the joint distribution over the target vehicle s behavior labels  and the states of all vehicles within the context from times  th to t  and we use our assumptions to model the probability  of the label ytf taking on value m   m as follows   p  ytf   m  yt   . . .   yt th   vtq   vt    . . .   vt          x  q     p  ytf   yt   . . .   yt th   vt   vt    . . .   vt     ytf  m m         x    p  vtqh   vt h   . . .   vt h        ytf  m m  t  y    p  yk    vkq   vk    . . .   vk       k th            q        p  vkq   vk    . . .   vk   vk      vk      . . .   vk         we further factorize the distributions in     based on our  assumption of conditional independence between lanes and  markovian temporal dynamics   p  yk    vkq   vk    . . .   vk                p  yk    vkq   vk    vk   p  yk    vkq   vk    vk       p  yk    vkq   vk    vk    vk        l  yk     vkq   vk    vk    s  yk     vkq   vk    vk        r  yk     vkq   vk    vk     q        p  vkq   vk    . . .   vk   vk      vk      . . .   vk                q          p  vkq   vk    vk   vk      vk      vk       q          p  vkq   vk    vk   vk      vk      vk       q          p  vkq   vk    vk   vk      vk      vk            l  vkq   vk    vk    s  vkq   vk    vk    r  vkq   vk    vk     where each function      and      is a parameterization of  the spatiotemporal and temporal factor functions  respectively  and where l  r  s denote the left  right  and same  lanes. these functions can take on various forms  include  exponential models in the case of the spatiotemporal factors  and gaussians in the case of the temporal models    . by  parameterizing each of the three lane factors using the states  of each of the neighboring cars in the lane along with the  target vehicle  we allow the model to take into account  spatiotemporal interactions between each of the vehicles used  in each factor. hence  from the vehicle states for a given  lane  we can accommodate the possibility of using relative    distance and velocity features between vehicles. the final  lane change prediction is given by  ytqf   argmax p  ytf   m  yt   ...  yt th   vtq   vt    ...  vt   .  m m           b. learning factor functions using structural rnns  factor functions are typically parameterized by hand to  incorporate hand tuned features with simple weights  which  limits the modeling power of standard factor graphs                  . following the approach of jain et al.              we preserve the transparency of the graphical model and  yet   leverage the power of rnns by converting it into a structural  rnn  srnn  trained to classify the lane change label. the  srnn composites factors  captured as network snippets  into  a larger rnn. specifically  random variable and factor nodes  within graphical models are represented using their own  rnn units  which we will call nodernns and factorrnns   respectively . this allows us to use the sequence modeling  power of rnns together with the structure provided by our  spatiotemporal factor graph.  to convert our graph into a structural rnn  we use lstm  units to represent each of the three lane interaction factors   each      in      as factorrnns. while standard structural  rnns use different lstm units for each spatiotemporal and  temporal factor as in jain et al.             we note that a  single lstm unit can jointly model both the spatiotemporal  factors along with temporal factors  each      in      for  a given lane. lstm units have two recurrent functions  within them one for computing the output and one for  computing the context vector at each time step given the  input features and previous outputs and states    . we provide  extra details about the lstm unit in appendix a. this  allows us to model the spatiotemporal interaction factors with  the recurrent output function since the outputs of those are  directly used in the prediction of the future lane change label.  similarly  we use the recurrent context vector function within  each lstm to model temporal factors as a function of the  input vehicle states. by using a single lstm to model both  factors for each lane  we reduce the complexity of our model  and benefit from being able to train it with a smaller dataset.  since our graph has a single random variable node representing the future lane change maneuver  our structural  rnn has one nodernn to combine the outputs of each  lane s factorrnn. during the forward pass of the structural  rnn  each lane s vehicle state at each time step are passed  through their respective factorrnns. the outputs of the  three factorrnns are then concatenated passed through the  nodernn. the following equations detail the computation  performed at each time step  noting that lst m represents  the lstm model  model details are provided in appendix  a   hit and clk are the hidden outputs and context vectors   respectively  of the ith lstm unit at time step k    th   t    and that the scripts l  r  s  and n mean left lane  right lane      v   v   vq    left lane  factorrnn    v   v   vq    same lane  factorrnn    vq  nodernn   concatenate     v   v   vq    learning rate of      . in addition  we center and scale the  vehicle state inputs to have zero mean and unit variance  as a part of our preprocessing step. all of our software is  implemented in python using tensorflow     .    ytf    v. e xperiments     softmax layer     a. setup    right lane  factorrnn    fig.  . our composite rnn model created using our lane based factor  graph from section iv a. at each k  the states for each neighboring car for  the given lane and the target car are concatenated and fed as input through  the given lane s factorrnn. each factorrnn output is concatenated and fed  through the nodernn. once the network is unrolled across all the past th  observations  the last nodernn output is fed through one fully connected  layer to get the final lane change maneuver classification.    same lane  and node  respectively    hlk   clk     lst ml   vk    vk    vkq    hlk     clk        hsk   csk     hrk   crk     hnk   cnk    hi                lst ms   vk    vk    vkq    hsk     csk       lst mr   vk    vk    vkq    hrk     crk       lst mn   hlk   hsk   hrk    hnk     cnk                                ci     where all  and  are zero initialized before each forward  pass through the network. after unrolling all time steps  of vehicle states through the structural rnn  we take the  nodernn s output of the last time step hnt and pass it through  a softmax layer to obtain the final lane change prediction for  the target vehicle as follows   ytqf   softmax w hnt   b              where w and b are the weights and bias of the fully  connected layer that transforms the output into the  m  logprobabilities fed into the softmax function           .  at inference time  we use the final time step s output of  the structural rnn as the future lane change prediction   however  during end to end training  we follow the approach  of jain et al.            and apply a time based  exponentially  weighted softmax cross entropy loss function to each time  step s output  whereby outputs of the network early on are  weighted less while outputs toward the end of the input  sequence are weighted more. this encourages the model  to predict the label at all time steps while penalizing early  outputs less since they are only based on the early portion of  the rnn input sequence. doing so leads to better recurrent  outputs being used to build up to the final lane change  prediction.  c. implementation details  our proposed lane based srnn model is implemented  using lstms with layer normalization     . all lstm units  within the srnn have a hidden state size of    . the fully  connected layer has an input size of     and output size  of  m     . during training  we use     weight dropout  in the lstm units as implemented in semeniuta et al.            . we optimize the exponentially weighted softmax  cross entropy loss using the adam optimizer      with a    we use the data set collected by our autonomous vehicle   sec. iii  for evaluation. for a given time history and future  prediction horizon  we sample all the target vehicles tracked  long enough to satisfy these time requirements and split up  the data set into a training and evaluation set that contains      and     of the entire data  respectively. in natural  freeway driving scenarios  no lane change events outnumber  the number of left lane and right lane change events  thus  we  manually balance each training set to contain equal numbers  of left lane  right lane  and no lane change samples. we use  the authentic  unbalanced evaluation set to test our models.  each sample is pre processed to center the initial target  vehicle position and orientation at the origin of a fixed  reference frame. this is done using applying a  d rotation by  the target vehicle s initial yaw and a translation by its initial  position coordinate to all vehicle positions  for target and  neighbors . the initial target vehicle yaw is subtracted for all  vehicles as well  and all velocities are rotated accordingly.  following this step  we center the training data and scale it  to have zero mean and unit norm before passing the data as  input to the lane change prediction model.  to evaluate the performance of our methods for various  time horizons  we train our lane based srnn and baseline  models  sec. v b  from scratch for each setting of time history th and future prediction horizon tf . in our experiments   we choose       and   seconds for th   and       and   seconds  for tf   .  b. baseline methods  we compare our lane based srnn to three types of  baseline models classical hidden markov models  hmms    single lstm models  and a simpler  single factor srnn.  since our method comes about from a temporal graphical  model  we first compare it against the classical approach  using hidden markov models  hmm      . each of the three  behaviors is modeled using its own hmm with multivariate  gaussian emission probabilities. all the vehicle states  for  neighbors and the target vehicle  are concatenated together to  create a single observation vector per time step. the hmms  are then trained in an unsupervised manner on training data  specific to their lane change class. at inference time  the  forward passes of the three hmms are applied to the input  sequence in parallel to produce class probabilities  and the  class with the highest  normalized  probability is chosen as  the final prediction. we choose the number of latent states  for each maneuver s hmm to maximize the overall f  score   harmonic mean of precision and recall  across the three    these correspond to         and    time steps  respectively when  accounting for the data frequency of   .  hz.    similarly  these correspond to         and    time steps  respectively.     manuevers in a grid search evaluated on     of the training  data withheld for a validation set.  since our method is composed of multiple lstm units   we compare it against a prediction model that uses only  one lstm unit. this can also be viewed as having only  a nodernn present. to further evaluate the effect of our  novel three lane structure used in the srnn  we compare our  method against a simpler  single factor srnn where we only  use one factorrnn instead of three. the output of this single  factorrnn is fed directly as input to the nodernn. this is  akin to using a stacked lstm for lane change prediction.  for both lstm baselines  we use the same type of lstm  units with hidden state sizes of     and layer normalization  as we do with our lane srnn method. the outputs at each  time step of both models are also passed through the same  size    x  fully connected layer and the softmax function  to produce the lane change probabilities. at inference time   only the last time step s output is used to make a future lane  change prediction. as with the hmm model  we concatenate  all the vehicle states together per time step to feed as input  to the model. we train each lstm baseline end to end using  the exponentially weighted softmax loss function applied to  all time steps      recurrent dropout  and the same learning  rate of      as with our lane srnn.  c. evaluation metrics  we evaluate each model using precision  recall  and accuracy for predicting left  right  and no lane change behaviors  for our proposed model and baselines evaluated on authentic  highway driving. we compute the number of true positives  tpm   false positives f pm   and false negatives f nm for each  maneuver m   m. we use these to compute the precision  p rm and recall rem values as p rm   tpm    tpm   f pm    and rem   pm    tpm   f nm    respectively. we  also calculate the overall prediction accuracy of the models   although it is not very useful since the vast majority of the  cases are no lane change. to overcome this limitation  we  calculate two other summary measures balanced accuracy  and positive lane change accuracy. the balanced accuracy  is a class averaged accuracy over the three cases  equally  weighting the left lane  right lane and no lane change accuracies. the positive lane change accuracy is the accuracy for  the subset of the evaluation data with the no lane change  samples completely discarded.  vi. a nalysis  we focus our analysis on the summary measures involving  the various accuracy metrics  however  we provide the full  results for each evaluation metric  sec v c  in table ii in  appendix b.  a. holistic performance  to analyze how the models perform as a whole  we  average the accuracy metrics provided in table ii and present  them in table i. we see that for average positive lanechange and balanced accuracies  our lane srnn outperforms  all baselines. the single lstm does have a better average    table i  average of accuracies across a ll a ll t ime h orizons  model  hmm  single lstm  single factor srnn  lane srnn  ours     avg acc   .      .      .      .       avg plc acc   .      .      .      .       avg bal acc   .      .      .      .       note  acc refers to overall accuracy  plc acc refers to positive lane change  accuracy  bal acc refers to balanced accuracy.  tf         .      tf        tf         .     .     .     .     .     .     .     .     .    th        th        th      hmm    th        single lstm    th      single factor srnn    th        th        th        th        lane srnn  ours     fig.  . balanced accuracies for each setting of time history th and future  prediction horizon tf for our lane srnn method compared against baseline  lane change prediction models.    overall accuracy  however  this comes at the expense of  missing the predictions of future lane changes while predicting no lane change behavior slightly better than the other  models. even in this case  our lane srnn is the second best  performing method  showing that it still has benefits over  the single factor srnn and the classical hmm baseline.  in general  all models are affected by false positives where  no lane change samples are incorrectly predicted as left or  right lane changes. this is a result of the skewed class  representation in authentic driving and leads to relatively  small overall accuracies on the evaluation data.  b. comparison of rnn based methods against hmms  from our time horizon experiments  we see a consistent  trend in the performance of our lane srnn  as well as  the rnn baselines  against the classical hmm method with  respect to balanced accuracies shown in fig  . as both  the future prediction horizon and time history increases  the  rnn based methods increasingly do better than hmms. we  see the largest performance different for the case of tf      and th     where our lane srnn outperforms the hmm by      in balanced accuracy. in the extreme case of predicting  lane changes   seconds into the future given   seconds of  history  rnn based models outperform hmms by as much  as   . hmms are limited in their ability to capture intricate  temporal lane change models with only multivariate gaussian  emissions and log linear transition probabilities. conversely   we see that our rnn based methods are able to learn richer  temporal models over longer sequences of time history that  lead to thier observed higher performance.  c. comparison of lane srnn to rnn baselines  from the balanced accuracy results displayed in fig.     we see that our proposed lane srnn has consistently high     performance across all time horizon settings. in most of the  nine time horizon settings  our lane srnn outperforms both  the single lstm and single factor srnn with the highest  performance at tf     and th    . when compared to the  single factor srnn specifically  we see that our lane srnn  in eight out of our nine time horizon settings. this points to  the merits of the novel three lane structure within our model  over a simpler srnn model that does not take the structure  of the target vehicle s context into account. similarly  we see  that our srnn model matches and outperforms the single  lstm model in eight of the nine time horizon cases. this  further shows the benefits of using a high level  interpretable  model realized using a composition of rnn units in our lane  srnn over the opaque  less transparent single lstm.  while our lane srnn outperforms the both the single  lstm and single factor srnn for most cases  there are  two independent cases where the either the single lstm or  single factor srnn perform slightly better than our proposed  method in terms of balanced accuracies. these can be seen  in fig.   for time horizon settings of two and three second  future predictions both given five seconds of time history.  these cases indicate that both the single lstm and singlefactor srnn can have sporadic performance spikes. we  hypothesize that this may be due to the skewed nature of  highway driving data  however  we leave the analysis into  these two unique cases for future work.  even with these two failure cases  we note that our lane  srnn model demonstrates consistently high performance  for longer prediction horizons given longer time histories. in  these cases  the consistency of our lane srnn s performance  is more important than one off  sporadic jumps since predicting lane changes farther out into the future given only past  observations requires more reliable temporal modeling. the  results of our experiments show that our lane srnn provides  this reliability as opposed to the other rnn baselines.  vii. c onclusion and f uture w ork  we present a novel  lane based srnn for modeling  and inferring the future lane change behavior expected to  be made by neighboring exovehicles in highway settings.  we use srnns to map a transparent factor graph into  a rnn architecture. our results and subsequent analysis  shows detailed evidence that  first  our model exhibits good  performance for lane change prediction of exovehicles and   second  it has merit over different time horizon settings  due to its lane based structure. while a few of the time  horizon settings show mixed results  the extra reliability and  transparency afforded by our lane srnn makes it a better  choice over the more opaque single lstm and single factor  srnn.  future work in this problem space can focus on the specific  failure modes of our lane srnn. moreover  while this work  specifically focuses on the problem of maneuver prediction  on interstate highways  in which the key semantic maneuvers  are limited to lane change  we note that our methods can  be extended to a more diverse set of maneuvers present  in city driving as well  such as turning at intersections.    since much of the problem for maneuver anticipation for  exovehicles besides the given target vehicle based only on  past lidar and inertial data has been unexplored  we leave  the extensions for city driving and more diverse maneuvers  for our future work.  a ppendix  a. lstm equations  we provide the equations of a standard lstm unit            for convenience. given in input sequence of feature  vectors xt   an initial hidden output vector h    and an initial  hidden context vector c    the follow operations are carried  out per time step   it     wi xt   ui ht     vi ct     bi               ft     wf xt   uf ht     vf ct     bf               ct   ft    ct     it    tanh wc xt   uc ht     bc            ot     wo xt   uo ht     vo ct   bo               ht   ot            tanh ct       where  is the element wise product    is the sigmoid  function       and the various w   u   v and b matrices  and vectors are the weights and biases of the lstm unit   respectively. while these equations showcase the two recurrent functions modeled in a given lstm unit  hidden state  and output   we note that in practice  we use a variant of  the lstm that applies layer normalization before passing  various quantities through the activation functions     .  b. full evaluation results  we provide the full results for all evaluation metrics in  table ii which are used in the analysis of our methods.  acknowledgement  this work was sponsored by toyota motor north america  research and development  tmna r d . we would like to  acknowledge tmna r d for providing the collected data  set using the toyota highway teammate vehicle. we also  would like to acknowledge richard frazin for his help in  processing the data set.  